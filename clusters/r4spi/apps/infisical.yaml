apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: infisical
spec:
  project: base
  source:
    repoURL: https://github.com/jyje/cluster
    targetRevision: main
    path: helm/infisical-standalone-1.4.0
    helm:
      valueFiles:
        - values.yaml
      valuesObject:
        infisical:
          enabled: true
          replicaCount: 1
        ingress:
          enabled: true
          nginx:
            enabled: false
          hostName: infisical.app.jyje.live
          ingressClassName: nginx
          annotations:
            cert-manager.io/cluster-issuer: letsencrypt-prod
            nginx.ingress.kubernetes.io/configuration-snippet: |
              more_set_headers "Access-Control-Allow-Origin: $http_origin";
            nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
            nginx.ingress.kubernetes.io/cors-allow-headers: X-Api-Key
            nginx.ingress.kubernetes.io/cors-allow-methods: HEAD
            nginx.ingress.kubernetes.io/enable-cors: "true"
          tls:
            - secretName: infisical-letsencrypt-tls
              hosts:
                - infisical.app.jyje.live
        # postgresDBConnectionString: ""
        # redisConnectionString: ""
        postgresql:
          enabled: true
          primary:
            persistence:
              size: 200Mi
          readReplicas:
            persistence:
              size: 200Mi
        redis:
          enabled: false
          master:
            extraEnvVars:
              - name: MALLOC
                value: libc
            persistence:
              size: 200Mi
          replica:
            extraEnvVars:
              - name: MALLOC
                value: libc
            persistence:
              size: 200Mi
  destination:
    namespace: infisical
    server: 'https://kubernetes.default.svc'
  syncPolicy:
    syncOptions:
      - CreateNamespace=true
    automated: {}
