apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: milvus
spec:
  project: ai
  source:
    repoURL: https://github.com/jyje/cluster
    targetRevision: develop
    path: helm/milvus-4.2.17
    helm:
      valueFiles:
        - values.yaml
      valuesObject:
        cluster:
          enabled: false
        nodeSelector:
          app.jyje.live/node.family: raspberry-pi
          app.jyje.live/raspi.type: 5b
        tolerations:
          - key: node-role.kubernetes.io/gpu
            operator: Exists
        service:
          type: NodePort
          nodePort: 31953
        attu:
          enabled: true
          ingress:
            enabled: true
            ingressClassName: nginx
            annotations:
              cert-manager.io/cluster-issuer: letsencrypt-prod
              nginx.ingress.kubernetes.io/configuration-snippet: |
                more_set_headers "Access-Control-Allow-Origin: $http_origin";
              nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
              nginx.ingress.kubernetes.io/cors-allow-headers: X-Api-Key
              nginx.ingress.kubernetes.io/cors-allow-methods: HEAD
              nginx.ingress.kubernetes.io/enable-cors: "true"
            hosts:
              - attu.app.jyje.live
            tls:
              - secretName: attu-letsencrypt-tls
                hosts:
                  - attu.app.jyje.live
        minio:
          enabled: true
          resources:
            requests:
              memory: 200Mi
          tls:
            enabled: false
          persistence:
            enabled: true
            storageClass: longhorn
            accessMode: ReadWriteOnce
            size: 10Gi
        etcd:
          enabled: true
        pulsar:
          enabled: false
        externalS3:
          enabled: false
        externalEtcd:
          enabled: false
  destination:
    namespace: milvus-system
    server: 'https://kubernetes.default.svc'
  syncPolicy:
    syncOptions:
      - CreateNamespace=true
    automated: {}
